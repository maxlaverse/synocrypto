package encoding

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestWritingMetadata(t *testing.T) {
	givenMetadata := map[string]interface{}{
		"compress":         1,
		"session_key_hash": "ZEoJGjyTnBed4d99ebd929c9ff24194bc00355457c",
		"version": map[string]interface{}{
			"major": 3,
			"minor": 1,
		},
	}

	expectedBytes := []byte{
		0x5f, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x53, 0x59, 0x4e,
		0x43, 0x5f, 0x45, 0x4e, 0x43, 0x5f, 0x5f, 0x64, 0x38, 0x64,
		0x36, 0x62, 0x61, 0x37, 0x62, 0x39, 0x64, 0x66, 0x30, 0x32,
		0x65, 0x66, 0x33, 0x39, 0x61, 0x33, 0x33, 0x65, 0x66, 0x39,
		0x31, 0x32, 0x61, 0x39, 0x31, 0x64, 0x63, 0x35, 0x36, 0x42,
		0x10, 0x0, 0x8, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x1, 0x1, 0x1, 0x10, 0x0, 0x10, 0x73, 0x65, 0x73,
		0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68,
		0x61, 0x73, 0x68, 0x10, 0x0, 0x2a, 0x5a, 0x45, 0x6f, 0x4a,
		0x47, 0x6a, 0x79, 0x54, 0x6e, 0x42, 0x65, 0x64, 0x34, 0x64,
		0x39, 0x39, 0x65, 0x62, 0x64, 0x39, 0x32, 0x39, 0x63, 0x39,
		0x66, 0x66, 0x32, 0x34, 0x31, 0x39, 0x34, 0x62, 0x63, 0x30,
		0x30, 0x33, 0x35, 0x35, 0x34, 0x35, 0x37, 0x63, 0x10, 0x0,
		0x4, 0x74, 0x79, 0x70, 0x65, 0x10, 0x0, 0x8, 0x6d, 0x65,
		0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x0, 0x7, 0x76,
		0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0, 0x5,
		0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x1, 0x1, 0x3, 0x10, 0x0,
		0x5, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x1, 0x1, 0x1, 0x40, 0x40,
	}

	var b bytes.Buffer
	writer := NewWriter(&b)
	err := writer.WriteMetadata(givenMetadata)

	assert.NoError(t, err)
	assert.Equal(t, expectedBytes, b.Bytes())
}

func TestWritingCloudSyncHeader(t *testing.T) {
	var b bytes.Buffer
	err := writeCloudSyncHeader(&b)

	assert.NoError(t, err)
	assert.Equal(t, b.String(), "__CLOUDSYNC_ENC__d8d6ba7b9df02ef39a33ef912a91dc56")
}
